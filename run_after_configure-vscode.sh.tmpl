{{ if and (eq .chezmoi.os "darwin" "linux") (not .headless) -}}

{{ $extensions := list
    "asvetliakov.vscode-neovim"
    "bierner.markdown-mermaid"
    "bpruitt-goddard.mermaid-markdown-syntax-highlighting"
    "christian-kohler.path-intellisense"
    "DavidAnson.vscode-markdownlint"
    "eamodio.gitlens"
    "EditorConfig.EditorConfig"
    "gieson.writeTimestamp"
    "GitHub.copilot"
    "GitHub.copilot-chat"
    "golang.go"
    "Gruntfuggly.todo-tree"
    "jinliming2.vscode-go-template"
    "jock.svg"
    "ms-azuretools.vscode-docker"
    "ms-python.isort"
    "ms-python.python"
    "ms-python.vscode-pylance"
    "ms-vscode-remote.remote-containers"
    "ms-vscode-remote.remote-ssh-edit"
    "ms-vscode-remote.remote-ssh"
    "ms-vscode-remote.vscode-remote-extensionpack"
    "ms-vscode.cpptools"
    "redhat.vscode-yaml"
    "stkb.rewrap"
    "streetsidesoftware.code-spell-checker"
    "tamasfe.even-better-toml"
    "task.vscode-task"
    "timonwong.shellcheck"
    "Tyriar.sort-lines"
    "vscodevim.vim"
    "yzhang.markdown-all-in-one" -}}

#!/bin/bash
set -eufo pipefail

installed_extensions=$(code --list-extensions)

{{ range $extensions -}}
if ! echo "$installed_extensions" | grep -qF "{{ . }}"; then
    echo "## Installing {{ . }}..."
    code --force --install-extension {{ . }}
else
    echo "## {{ . }} is already installed."
fi
{{ end -}}

{{ end -}}